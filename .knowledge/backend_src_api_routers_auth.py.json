{"is_source_file": true, "format": "Python", "description": "This file defines authentication-related API endpoints (signup and login) using FastAPI framework. It manages user registration, login, and token issuance with JWT, referencing external models, storage, and auth modules.", "external_files": ["src/api/models", "src/api/storage", "src/api/auth"], "external_methods": ["db.get_user_by_email", "db.create_user", "db.verify_password", "create_access_token"], "published": ["router"], "classes": [], "methods": [{"name": "TokenResponse signup(payload: SignupRequest)", "description": "Registers a new user and returns an access token, handling user creation and duplicate email error.", "scope": "", "scopeKind": ""}, {"name": "TokenResponse login( payload: LoginRequest | None = None, email: str | None = Form( default=None, description=\"Email for account login when using form-encoded payloads (alias of 'username').\", ), password: str | None = Form( default=None, description=\"Password for account login when using form-encoded payloads.\", ), username: str | None = Form( default=None, description=\"Alias used by OAuth2PasswordRequestForm; treated as the email.\", ), )", "description": "Authenticates a user via JSON payload or form data, returning an access token upon success.", "scope": "", "scopeKind": ""}], "calls": ["db.get_user_by_email", "db.create_user", "create_access_token", "db.verify_password", "create_access_token"], "search-terms": ["auth endpoints", "JWT token issuance", "FastAPI authentication", "signup route", "login route", "user registration", "user login", "token response"], "state": 2, "file_id": 9, "knowledge_revision": 28, "git_revision": "7c048295b84cf3359757de84ffbea0726b4b6c3a", "revision_history": [{"18": ""}, {"26": ""}, {"27": "7c048295b84cf3359757de84ffbea0726b4b6c3a"}, {"28": "7c048295b84cf3359757de84ffbea0726b4b6c3a"}], "ctags": [{"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/tailored-api-response-system-96060-96070/backend/src/api/routers/auth.py", "pattern": "/^def login($/", "language": "Python", "typeref": "typename:TokenResponse", "kind": "function", "signature": "( payload: LoginRequest | None = None, email: str | None = Form( default=None, description=\"Email for account login when using form-encoded payloads (alias of 'username').\", ), password: str | None = Form( default=None, description=\"Password for account login when using form-encoded payloads.\", ), username: str | None = Form( default=None, description=\"Alias used by OAuth2PasswordRequestForm; treated as the email.\", ), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/tailored-api-response-system-96060-96070/backend/src/api/routers/auth.py", "pattern": "/^router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/tailored-api-response-system-96060-96070/backend/src/api/routers/auth.py", "pattern": "/^def signup(payload: SignupRequest) -> TokenResponse:$/", "language": "Python", "typeref": "typename:TokenResponse", "kind": "function", "signature": "(payload: SignupRequest)"}], "hash": "c641c0227d145b53f6e6a32552536a33", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routers/auth.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}